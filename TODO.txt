THIS WE NEED TO DO!!!!!

20130902
Fix the bug (measure (makeTree ".") <> measure (makeTree "th") <> measure (makeTree "u"))
---
measure ('.' F.<| (makeTree "th" F.|> 'u'))
(0 -> Tokens {currentSeq = fromList [No Token:".t"
,PT (Pn 0 0 0) (TV "hu")
---
measure ('.' F.<| (makeTree "thu"))
(0 -> Tokens {currentSeq = fromList [PT (Pn 0 0 0) (TS ".")
,PT (Pn 0 0 0) (TV "thu")
---
measure (makeTree "." F.|> 't' F.|> 'h' F.|> 'u')
(0 -> Tokens {currentSeq = fromList [PT (Pn 0 0 0) (TS ".")
,PT (Pn 0 0 0) (TV "thu")
---
measure ('.' F.<| (makeTree "t" F.|> 'h' F.|> 'u'))
(0 -> Tokens {currentSeq = fromList [No Token:".t"
,PT (Pn 0 0 0) (TV "hu")
---
measure ('.' F.<| 't' F.<| (makeTree "h" F.|> 'u'))
(0 -> Tokens {currentSeq = fromList [PT (Pn 0 0 0) (TS ".")
,PT (Pn 0 0 0) (TV "thu")
---

20130821:

Current solution:

Transition = State -> (Prefix,Seq Tokens,Suffix)
Suffix = Either State -- This is an accepting states
                ((PartialToken,State),(Sequence of 'unsure,small' tokens,PartialToken,State))

- Test for full correctness:
  * take a valid input
  * split it in all intermediate positions; and for each of those:
    * parse parts separately
    * combine
- Design proper incrementality test
  - Experiment tabulating the top-level function
- Cleanup/Productize (as an alex template)
- Report:
  - Explain "most general" solution, without longest-matching rule
  - Compare the pros and cons. of various approaches. (including why some do not work at all)


20130814:

- Test some more with incremental updates
- Experiment tabulating the top-level function
- Cleanup/Productize (as an alex template)
- Report.

--LEXER STUFF--
General:
-Needs to ba able to handle special characters (UNASSIGNED)
-DFA needs to know accepting states. (Done, Maybe implement the priority structure?)
-Implement good error messages (UNASSIGNED)
-Implement test cases for our lexer (UNASSIGNED)
-Stupid bug when certain stuff are inserted which result in no tokens being generated for example "/**/"

HsBuilder.hs:
-Datastructure for DFA (KoffKoff, Better datatstructure for the inner map?)
-Better conversion from DFA then currently implemented (UNASSIGNED)
-How do we handle errors? example ("blablabla \n)
-Can we strip som of the transitions??

Main.hs
-Needed for anything but bug testing?

IncLex.hs:
-Check for more bugs (UNASSIGNED)
-Can we strip som of the transitions??

AbsSyn.hs
-Maybe move more data strucures here?

Alex:
-Remove as much as possible (UNASSIGNED)
    -Remove not needed files (HUGO)
    -Remove not needed code (UNASSIGNED)

BuildDFA.hs
-Is it done?

--REPORT STUFF--
Chpater 2:
-Find more ref. and fill out the text (UNASSIGNED)

Chapter 3:
-Write an introduction part (KoffKoff)
-Start by make a list of what would be written about. (UNASSIGNED)
-Formal proof that our combination yields the correct token. (UNASSIGNED)
